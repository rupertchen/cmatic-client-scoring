<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:views="com.serkanet.cmaticscoring.views.components.*"
	layout="absolute"
	label="{eventVo.tabName}"
	title="{eventVo.name}">

	<mx:Script>
		<![CDATA[
			import com.serkanet.cmaticscoring.models.vos.EventVo;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import com.serkanet.cmaticscoring.models.vos.ScoringVo;
			import mx.collections.ArrayCollection;

			public static const SHUFFLE_ORDERS:String = "shuffleOrders";
			public static const COMPUTE_PLACEMENTS:String = "computePlacements";
			public static const UNLOCK_EVENT:String = "unlockEvent";
			public static const END_EVENT:String = "endEvent";

			public static const SAVE_SCORINGS:String = "saveScorings";
			public static const RELOAD_SCORINGS:String = "reloadScorings";
			public static const CLOSE:String = "close";

			[Bindable]
			public var eventVo:EventVo;

			[Bindable]
			public var scorings:ArrayCollection;

			[Bindable]
			public var isLocked:Boolean;

			[Bindable]
			public var isEndEventEnabled:Boolean;


			public function remove():void {
				parent.removeChild(this);
			}


			private function sendEvent(eventName:String):void {
				dispatchEvent(new Event(eventName, true));
			}


			private function getDataTipForName(scoring:ScoringVo):String {
				if (scoring.competitorId) {
					return scoring.name + " (" + scoring.competitorId + ")";
				}
				return scoring.name;
			}


			private function timeLabelFunction(item:ScoringVo, column:DataGridColumn):String {
				return formatTime(item[column.dataField]);
			}


			private function formatTime(seconds:Number):String {
				if (isNaN(seconds)) {
					return "--:--";
				}

				var minutes:Number = Math.floor(seconds / 60);
				var seconds:Number = seconds % 60;
				return minutes.toString()
					+ ":"
					+ ((seconds < 10) ? "0" : "")
					+ seconds.toString();
			}


			private function finalScoreDataTipFunction(item:ScoringVo):String {
				return item.finalScore
					+ "\n(" + item.tieBreaker1
					+ "/" + item.tieBreaker2
					+ "/" + item.tieBreaker3
					+ ")";
			}


			private function placementLabelFunction(item:ScoringVo, column:DataGridColumn):String {
				if (0 == item.placement) {
					return '--';
				}
				return item.placement.toString();
			}


			private function onClickEndEvent():void {
				var onClose:Function = function (event:CloseEvent):void {
					if (Alert.YES == event.detail) {
						sendEvent(END_EVENT);
					}
				};
				Alert.show("Are you sure you want to end the event? This will save all pending changes and mark the event as finished.", "Warning",
					Alert.YES | Alert.NO, null, onClose, null, Alert.NO);
			}


			private function onClickCancelChanges():void {
				var onClose:Function = function (event:CloseEvent):void {
					if (Alert.YES == event.detail) {
						sendEvent(RELOAD_SCORINGS);
					}
				};
				Alert.show("Are you sure you want to cancel all pending changes? There is no undo.", "Warning",
					Alert.YES | Alert.NO, null, onClose, null, Alert.NO);
			}

		]]>
	</mx:Script>

	<mx:DataGrid
		width="100%" height="100%"
		draggableColumns="false"
		dataProvider="{scorings}"
		editable="{!isLocked}">
		<mx:columns>
			<mx:DataGridColumn
				dataField="order"
				headerRenderer="mx.controls.Label"
				headerText="Order"
				width="40"
				editable="true"
				resizable="false"/>
			<mx:DataGridColumn
				dataField="name"
				headerRenderer="mx.controls.Label"
				headerText="Name"
				editable="false"
				showDataTips="true" dataTipFunction="getDataTipForName"/>
			<views:DataGridGivenPointsColumn
				dataField="score1"
				headerText="Score 1"/>
			<views:DataGridGivenPointsColumn
				dataField="score2"
				headerText="Score 2"/>
			<views:DataGridGivenPointsColumn
				dataField="score3"
				headerText="Score 3"/>
			<views:DataGridGivenPointsColumn
				dataField="score4"
				headerText="Score 4"/>
			<views:DataGridGivenPointsColumn
				dataField="score5"
				headerText="Score 5"/>
			<mx:DataGridColumn
				dataField="time"
				headerRenderer="mx.controls.Label"
				headerText="Time"
				width="65"
				labelFunction="timeLabelFunction"
				itemEditor="com.serkanet.cmaticscoring.views.components.TimeItemEditor"
				editorDataField="seconds"/>
			<views:DataGridDeductedPointsColumn
				dataField="timeDeduction"
				headerText="Time Deduction"/>
			<views:DataGridDeductedPointsColumn
				dataField="otherDeduction"
				headerText="Other Deduction"/>
			<mx:DataGridColumn
				dataField="finalScore"
				headerRenderer="mx.controls.Label"
				headerText="Final Score"
				width="55"
				editable="false"
				showDataTips="true" dataTipFunction="finalScoreDataTipFunction"
				itemRenderer="com.serkanet.cmaticscoring.views.components.PointsItemRenderer"/>
			<mx:DataGridColumn
				dataField="placement"
				headerRenderer="mx.controls.Label"
				headerText="Placement"
				width="40"
				editable="false"
				labelFunction="placementLabelFunction"/>
			<mx:DataGridColumn
				dataField="needsSaving"
				width="10"
				editable="false"
				resizable="false"
				itemRenderer="com.serkanet.cmaticscoring.views.components.NeedsSavingItemRenderer"/>
		</mx:columns>
	</mx:DataGrid>

	<mx:ControlBar horizontalAlign="right">
		<mx:Button label="Shuffle" click="sendEvent(SHUFFLE_ORDERS)"
			toolTip="Randomly shuffle the order of the competitors."/>
		<mx:Button label="Re-Rank" click="sendEvent(COMPUTE_PLACEMENTS)"
			toolTip="Re-rank all competitors break ties."/>
		<mx:Spacer width="25"/>
		<mx:Button label="Unlock" click="sendEvent(UNLOCK_EVENT)" enabled="{isLocked}"
			toolTip="Unlocking an event will make the scores editable."/>
		<mx:Button label="End" click="onClickEndEvent()" enabled="{isEndEventEnabled}"
			toolTip="Ending an event will rank the competitors and prevent further changes."/>
		<mx:Spacer width="25"/>
		<mx:Button label="Save" click="sendEvent(SAVE_SCORINGS)"
			toolTip="Save all changes."/>
		<mx:Button label="Cancel" click="onClickCancelChanges()"
			toolTip="Ignore all changes and reload."/>
		<mx:Button label="Close" click="sendEvent(CLOSE)"
			toolTip="Close this tab."/>
	</mx:ControlBar>
</mx:Panel>
